name: Daily build

# Controls when the action will run.
on: 
  schedule:
    - cron: '30 2 * * *'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    build:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v2

            # Build the ballerina project
            - name: Ballerina Build
              uses: ballerina-platform/ballerina-action/@nightly
              with:
                  args:
                      pack ./gsheet

            # Test the ballerina project
            - name: Ballerina Tests
              uses: ballerina-platform/ballerina-action/@nightly
              with:
                  args:
                      test --code-coverage ./gsheet
              env:
                CLIENT_ID: ${{ secrets.CLIENT_ID }}
                CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
                REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}

            # Read the ballerina test results
            - name: Read Ballerina Test Results
              id: test_results
              run: |
                content=`cat ./gsheet/target/report/test_results.json`                
                content="${content//'%'/'%25'}"
                content="${content//$'\n'/'%0A'}"
                content="${content//$'\r'/'%0D'}"
                echo "::set-output name=testResultsJson::$content"

            # Print the code coverage information
            - name: Code Coverage
              run: |
                echo "Covered Code Lines : ${{fromJson(steps.test_results.outputs.testResultsJson).coveredLines}}"
                echo "Total Code Lines : $(expr ${{fromJson(steps.test_results.outputs.testResultsJson).missedLines}} + ${{fromJson(steps.test_results.outputs.testResultsJson).coveredLines}})"
                echo "Code Coverage Percentage : ${{fromJson(steps.test_results.outputs.testResultsJson).coveragePercentage}}"
